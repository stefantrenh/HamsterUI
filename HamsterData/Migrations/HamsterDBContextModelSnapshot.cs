// <auto-generated />
using System;
using HamsterData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HamsterData.Migrations
{
    [DbContext(typeof(HamsterDBContext))]
    partial class HamsterDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HamsterData.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            Type = "Workout"
                        },
                        new
                        {
                            ActivityId = 2,
                            Type = "Move To Cage"
                        },
                        new
                        {
                            ActivityId = 3,
                            Type = "Arrival"
                        },
                        new
                        {
                            ActivityId = 4,
                            Type = "Checked Out"
                        });
                });

            modelBuilder.Entity("HamsterData.Cage", b =>
                {
                    b.Property<int>("CageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("CageId");

                    b.ToTable("Cages");

                    b.HasCheckConstraint("CK_Cage_Size", "[Size] >= 0 AND [Size] <= 3");

                    b.HasData(
                        new
                        {
                            CageId = 1,
                            IsMale = true,
                            Size = 0
                        },
                        new
                        {
                            CageId = 2,
                            IsMale = true,
                            Size = 0
                        },
                        new
                        {
                            CageId = 3,
                            IsMale = true,
                            Size = 0
                        },
                        new
                        {
                            CageId = 4,
                            IsMale = true,
                            Size = 0
                        },
                        new
                        {
                            CageId = 5,
                            IsMale = true,
                            Size = 0
                        },
                        new
                        {
                            CageId = 6,
                            IsMale = false,
                            Size = 0
                        },
                        new
                        {
                            CageId = 7,
                            IsMale = false,
                            Size = 0
                        },
                        new
                        {
                            CageId = 8,
                            IsMale = false,
                            Size = 0
                        },
                        new
                        {
                            CageId = 9,
                            IsMale = false,
                            Size = 0
                        },
                        new
                        {
                            CageId = 10,
                            IsMale = false,
                            Size = 0
                        });
                });

            modelBuilder.Entity("HamsterData.Hamster", b =>
                {
                    b.Property<int>("HamsterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckedIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("HasWorkedOut")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TimeWaited")
                        .HasColumnType("time");

                    b.Property<int?>("WellnessCenterId")
                        .HasColumnType("int");

                    b.HasKey("HamsterId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CageId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WellnessCenterId");

                    b.ToTable("Hamsters");

                    b.HasData(
                        new
                        {
                            HamsterId = 1,
                            Age = 4,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Rufus",
                            OwnerId = 1
                        },
                        new
                        {
                            HamsterId = 2,
                            Age = 12,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Lisa",
                            OwnerId = 1
                        },
                        new
                        {
                            HamsterId = 3,
                            Age = 11,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Fluff",
                            OwnerId = 2
                        },
                        new
                        {
                            HamsterId = 4,
                            Age = 10,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Nibbler",
                            OwnerId = 2
                        },
                        new
                        {
                            HamsterId = 5,
                            Age = 9,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Sneaky",
                            OwnerId = 3
                        },
                        new
                        {
                            HamsterId = 6,
                            Age = 8,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Sussi",
                            OwnerId = 3
                        },
                        new
                        {
                            HamsterId = 7,
                            Age = 7,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Mulan",
                            OwnerId = 4
                        },
                        new
                        {
                            HamsterId = 8,
                            Age = 6,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Miss Diggy",
                            OwnerId = 5
                        },
                        new
                        {
                            HamsterId = 9,
                            Age = 5,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Kalle",
                            OwnerId = 6
                        },
                        new
                        {
                            HamsterId = 10,
                            Age = 4,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Kurt",
                            OwnerId = 7
                        },
                        new
                        {
                            HamsterId = 11,
                            Age = 4,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Starlight",
                            OwnerId = 7
                        },
                        new
                        {
                            HamsterId = 12,
                            Age = 3,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Chivas",
                            OwnerId = 8
                        },
                        new
                        {
                            HamsterId = 13,
                            Age = 3,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Malin",
                            OwnerId = 9
                        },
                        new
                        {
                            HamsterId = 14,
                            Age = 24,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Bulle",
                            OwnerId = 10
                        },
                        new
                        {
                            HamsterId = 15,
                            Age = 23,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Beppe",
                            OwnerId = 11
                        },
                        new
                        {
                            HamsterId = 16,
                            Age = 22,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Bobo",
                            OwnerId = 12
                        },
                        new
                        {
                            HamsterId = 17,
                            Age = 21,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Robin",
                            OwnerId = 13
                        },
                        new
                        {
                            HamsterId = 18,
                            Age = 20,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Amber",
                            OwnerId = 14
                        },
                        new
                        {
                            HamsterId = 19,
                            Age = 19,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Kimber",
                            OwnerId = 15
                        },
                        new
                        {
                            HamsterId = 20,
                            Age = 18,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Ruby",
                            OwnerId = 16
                        },
                        new
                        {
                            HamsterId = 21,
                            Age = 16,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Fiffi",
                            OwnerId = 17
                        },
                        new
                        {
                            HamsterId = 22,
                            Age = 16,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Neko",
                            OwnerId = 18
                        },
                        new
                        {
                            HamsterId = 23,
                            Age = 15,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Clint",
                            OwnerId = 19
                        },
                        new
                        {
                            HamsterId = 24,
                            Age = 14,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Sauron",
                            OwnerId = 20
                        },
                        new
                        {
                            HamsterId = 25,
                            Age = 12,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Gittan",
                            OwnerId = 21
                        },
                        new
                        {
                            HamsterId = 26,
                            Age = 110,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Crawler",
                            OwnerId = 22
                        },
                        new
                        {
                            HamsterId = 27,
                            Age = 9,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Mimmi",
                            OwnerId = 23
                        },
                        new
                        {
                            HamsterId = 28,
                            Age = 8,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Marvel",
                            OwnerId = 24
                        },
                        new
                        {
                            HamsterId = 29,
                            Age = 7,
                            Gender = "M",
                            HasWorkedOut = false,
                            Name = "Storm",
                            OwnerId = 25
                        },
                        new
                        {
                            HamsterId = 30,
                            Age = 6,
                            Gender = "K",
                            HasWorkedOut = false,
                            Name = "Busan",
                            OwnerId = 26
                        });
                });

            modelBuilder.Entity("HamsterData.HistoryLog", b =>
                {
                    b.Property<int>("HistoryLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("HamsterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("HistoryLogId");

                    b.HasIndex("HamsterId");

                    b.ToTable("HistoryLogs");
                });

            modelBuilder.Entity("HamsterData.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerId = 1,
                            Email = "KallegurraAktersnurra@Live.se",
                            FirstName = "Kallegurra",
                            LastName = "Aktersnurra",
                            Phone = 784069182
                        },
                        new
                        {
                            OwnerId = 2,
                            Email = "CarlHamilton@Live.se",
                            FirstName = "Carl",
                            LastName = "Hamilton",
                            Phone = 762112010
                        },
                        new
                        {
                            OwnerId = 3,
                            Email = "LisaNilsson@Live.se",
                            FirstName = "Lisa",
                            LastName = "Nilsson",
                            Phone = 769189451
                        },
                        new
                        {
                            OwnerId = 4,
                            Email = "JanHallgren@Live.se",
                            FirstName = "Jan",
                            LastName = "Hallgren",
                            Phone = 776309007
                        },
                        new
                        {
                            OwnerId = 5,
                            Email = "OttillaMurkwood@Live.se",
                            FirstName = "Ottilla",
                            LastName = "Murkwood",
                            Phone = 765759125
                        },
                        new
                        {
                            OwnerId = 6,
                            Email = "AnfersMurkwood@Live.se",
                            FirstName = "Anfers",
                            LastName = "Murkwood",
                            Phone = 781109088
                        },
                        new
                        {
                            OwnerId = 7,
                            Email = "AnnaBook@Live.se",
                            FirstName = "Anna",
                            LastName = "Book",
                            Phone = 789272912
                        },
                        new
                        {
                            OwnerId = 8,
                            Email = "PernillaWahlgren@Hotmail.com",
                            FirstName = "Pernilla",
                            LastName = "Wahlgren",
                            Phone = 789992453
                        },
                        new
                        {
                            OwnerId = 9,
                            Email = "BiancaIngrosso@Live.se",
                            FirstName = "Bianca",
                            LastName = "Ingrosso",
                            Phone = 799324169
                        },
                        new
                        {
                            OwnerId = 10,
                            Email = "LorenzoLamas@Live.se",
                            FirstName = "Lorenzo",
                            LastName = "Lamas",
                            Phone = 778314311
                        },
                        new
                        {
                            OwnerId = 11,
                            Email = "BobbyEwing@Yahoo.com",
                            FirstName = "Bobby",
                            LastName = "Ewing",
                            Phone = 793616485
                        },
                        new
                        {
                            OwnerId = 12,
                            Email = "HedyLamar@Yahoo.com",
                            FirstName = "Hedy",
                            LastName = "Lamar",
                            Phone = 778799921
                        },
                        new
                        {
                            OwnerId = 13,
                            Email = "BetteDavis@Yahoo.com",
                            FirstName = "Bette",
                            LastName = "Davis",
                            Phone = 767648251
                        },
                        new
                        {
                            OwnerId = 14,
                            Email = "KimCarnes@Yahoo.com",
                            FirstName = "Kim",
                            LastName = "Carnes",
                            Phone = 797400223
                        },
                        new
                        {
                            OwnerId = 15,
                            Email = "Morkof@Live.se",
                            FirstName = "Mork",
                            LastName = "of",
                            Phone = 789146089
                        },
                        new
                        {
                            OwnerId = 16,
                            Email = "MindyMendel@Hotmail.com",
                            FirstName = "Mindy",
                            LastName = "Mendel",
                            Phone = 766764279
                        },
                        new
                        {
                            OwnerId = 17,
                            Email = "GWHansson@Hotmail.com",
                            FirstName = "GW",
                            LastName = "Hansson",
                            Phone = 796529157
                        },
                        new
                        {
                            OwnerId = 18,
                            Email = "PiaHansson@Yahoo.com",
                            FirstName = "Pia",
                            LastName = "Hansson",
                            Phone = 786798448
                        },
                        new
                        {
                            OwnerId = 19,
                            Email = "BoEk@Live.se",
                            FirstName = "Bo",
                            LastName = "Ek",
                            Phone = 794442667
                        },
                        new
                        {
                            OwnerId = 20,
                            Email = "AnnaAl@Yahoo.com",
                            FirstName = "Anna",
                            LastName = "Al",
                            Phone = 764223291
                        },
                        new
                        {
                            OwnerId = 21,
                            Email = "HansBjörk@Yahoo.com",
                            FirstName = "Hans",
                            LastName = "Björk",
                            Phone = 762955817
                        },
                        new
                        {
                            OwnerId = 22,
                            Email = "CaritaGran@Yahoo.com",
                            FirstName = "Carita",
                            LastName = "Gran",
                            Phone = 765305007
                        },
                        new
                        {
                            OwnerId = 23,
                            Email = "MiaEriksson@Yahoo.com",
                            FirstName = "Mia",
                            LastName = "Eriksson",
                            Phone = 794859194
                        },
                        new
                        {
                            OwnerId = 24,
                            Email = "AnnaLinström@Live.se",
                            FirstName = "Anna",
                            LastName = "Linström",
                            Phone = 787546981
                        },
                        new
                        {
                            OwnerId = 25,
                            Email = "LennartBerg@Live.se",
                            FirstName = "Lennart",
                            LastName = "Berg",
                            Phone = 784559784
                        },
                        new
                        {
                            OwnerId = 26,
                            Email = "BoBergman@Yahoo.com",
                            FirstName = "Bo",
                            LastName = "Bergman",
                            Phone = 794597446
                        });
                });

            modelBuilder.Entity("HamsterData.WellnessCenter", b =>
                {
                    b.Property<int>("WellnessCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("WellnessCenterId");

                    b.ToTable("WellnessCenters");

                    b.HasCheckConstraint("CK_WellnessCenter_Size", "[Size] >= 0 AND [Size] <= 6");

                    b.HasData(
                        new
                        {
                            WellnessCenterId = 1,
                            Size = 0
                        });
                });

            modelBuilder.Entity("HamsterData.Hamster", b =>
                {
                    b.HasOne("HamsterData.Activity", null)
                        .WithMany("HistoryLogs")
                        .HasForeignKey("ActivityId");

                    b.HasOne("HamsterData.Cage", "Cage")
                        .WithMany("Hamsters")
                        .HasForeignKey("CageId");

                    b.HasOne("HamsterData.Owner", "Owner")
                        .WithMany("Hamsters")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamsterData.WellnessCenter", "WellnessCenter")
                        .WithMany("Hamsters")
                        .HasForeignKey("WellnessCenterId");

                    b.Navigation("Cage");

                    b.Navigation("Owner");

                    b.Navigation("WellnessCenter");
                });

            modelBuilder.Entity("HamsterData.HistoryLog", b =>
                {
                    b.HasOne("HamsterData.Hamster", "Hamster")
                        .WithMany()
                        .HasForeignKey("HamsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamster");
                });

            modelBuilder.Entity("HamsterData.Activity", b =>
                {
                    b.Navigation("HistoryLogs");
                });

            modelBuilder.Entity("HamsterData.Cage", b =>
                {
                    b.Navigation("Hamsters");
                });

            modelBuilder.Entity("HamsterData.Owner", b =>
                {
                    b.Navigation("Hamsters");
                });

            modelBuilder.Entity("HamsterData.WellnessCenter", b =>
                {
                    b.Navigation("Hamsters");
                });
#pragma warning restore 612, 618
        }
    }
}
